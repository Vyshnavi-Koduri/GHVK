# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Tl7URMBVayZWOdAxwO4Rp8H1p9ZMo3Wk
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, r2_score

# Expanded dataset for better training
# Each row represents different circuit paths

data = {
    'fan_in': [2, 1, 1, 3, 2, 4, 3],
    'fan_out': [1, 1, 1, 2, 1, 3, 2],
    'gate_count': [3, 2, 3, 4, 3, 5, 4],
    'critical_path_length': [3, 2, 3, 4, 3, 5, 4],
    'high_delay_gates': [0, 0, 0, 1, 0, 1, 1],
    'combinational_depth': [3, 2, 3, 4, 3, 5, 4]  # Target variable
}

df = pd.DataFrame(data)

# Splitting data into training and testing sets
X = df.drop(columns=['combinational_depth'])  # Features
y = df['combinational_depth']  # Target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train the ML model (Random Forest Regressor)
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predict on test set
y_pred = model.predict(X_test)

# Evaluate the model
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Absolute Error: {mae}")
print(f"RÂ² Score: {r2}")

# Example: Predict depth for the given circuit
new_signal = np.array([2, 1, 3, 3, 0]).reshape(1, -1)  # Ensuring correct shape
predicted_depth = model.predict(new_signal)
print(f"Predicted Combinational Depth: {predicted_depth[0]}")